org.geoserver.security.GeoServerAuthenticationKeyFilter.name=Clé d'authentification
org.geoserver.security.GeoServerAuthenticationKeyFilter.title=Authentification par l'emploi d'une clé


AuthenticationKeyFilterPanel.short=Clé d'authentification
AuthenticationKeyFilterPanel.title=Clé d'authentification
AuthenticationKeyFilterPanel.description=Authentifie en recherchant une clé d'authentification fournie dans un paramètre de l'URL

AuthenticationKeyFilterPanel.authKeyParamName=Nom du paramètre de l'URL
AuthenticationKeyFilterPanel.authKeyMapperName=Clé d'authentification pour l'utilisateur
AuthenticationKeyFilterPanel.userGroupService=Service groupes/utilisateurs

AuthenticationKeyFilterPanel.propertyMapper=Fichier de propriétés
AuthenticationKeyFilterPanel.userPropertyMapper=Propriété utilisateur
AuthenticationKeyFilterPanel.webServiceMapper=Service Web


AuthenticationKeyFilterPanel.authKeyParameters=Authentification avec une clé d'authentification
AuthenticationKeyFilterPanel.authKeyParametersHelp.title=Authentification avec une clé d'authentification
AuthenticationKeyFilterPanel.authKeyParametersHelp=<p>La clé d'authentification est envoyée via un paramètre d'URL</p><p>Exemple\: <strong>http\://my.geoserver.org/geoserver/web&authkey\=favdsfd</strong></p><p>La correspondance basée sur un fichier de propriété utilise un fichier <strong>authkeys.properties</strong> pour stocker la clé de correspondance d'un utilisateur.</p><p>La correspondance basée sur une propriété utilisateur stocke la clé comme propriété d'un utilisateur dans un service de groupe ou d'utilisateur.</p><p>Le bouton <strong>Synchroniser</strong>  sauvegarde la configuration et ajoute les clés manquantes pour les nouveaux utilisateurs.</p>

AuthenticationKeyFilterPanel.synchronizeSuccessful=Synchronisé avec succès en ajoutant {0} clés
AuthenticationKeyFilterPanel.synchronize=Synchroniser le service utilisateur/groupe

AuthenticationKeyFilterPanel.webServiceMapper.readTimeout=Timeout de lecture
AuthenticationKeyFilterPanel.webServiceMapper.connectTimeout=Délai de connexion
AuthenticationKeyFilterPanel.webServiceMapper.searchUser=Expression régulière de recherche de l'utilisateur dans la réponse du service web
AuthenticationKeyFilterPanel.webServiceMapper.webServiceUrl=URL du service web, avec le texte de remplacement
# AuthenticationKeyFilterPanel.fakeMapper=fakeMapper

# user group services
org.geoserver.security.WebServiceBodyResponseUserGroupService.name=Corps de la réponse du service web AuthKEY
# org.geoserver.security.WebServiceBodyResponseUserGroupService.title=AuthKEY WebService Body Response UserGroup Service

WebServiceBodyResponseUserGroupServicePanel.short=Cors de la réponse du service web AuthKEY
# WebServiceBodyResponseUserGroupServicePanel.title=AuthKEY WebService Body Response UserGroup Service
# WebServiceBodyResponseUserGroupServicePanel.description=User group service from WebService Response Body

WebServiceBodyResponseUserGroupServicePanel.webServiceBodyResponseUserGroupParameters=Cors de la réponse du service web AuthKEY
# WebServiceBodyResponseUserGroupServicePanel.webServiceBodyResponseUserGroupParametersHelp.title=AuthKEY WebService Body Response UserGroup Service
# WebServiceBodyResponseUserGroupServicePanel.webServiceBodyResponseUserGroupParametersHelp=<p>This Service looks for user roles inside the WebService Response Body. This is meant to be used along with <strong>AuthKey WebService Authentication</strong>.</p><p>Example Regex for Roles could be: <strong>^.*?"roles"\s*:\s*"([^"]+)".*$</strong></p><p><pre>{"roles": "ROLE_1, ROLE_2, ROLE_3"}</pre></p><p>Optionally it is possible to list the <strong>groups</strong> that the WebService could server: <pre>GROUP_ROLE_1, GROUP_ROLE_2, GROUP_ROLE_3</pre></p><p></p>

# WebServiceBodyResponseUserGroupServicePanel.searchRoles=Web Service Response Roles Search Regular Expression
# WebServiceBodyResponseUserGroupServicePanel.availableGroups=Optional static comma-separated list of available Groups from the Web Service response
# WebServiceBodyResponseUserGroupServicePanel.roleServiceName=Role Service to use (empty value means: use the current Active Role Service)

# role services
# org.geoserver.security.GeoServerRestRoleService.name=AuthKEY REST
# org.geoserver.security.GeoServerRestRoleService.title=AuthKEY REST Role Service

# GeoServerRestRoleServicePanel.short=AuthKEY REST
# GeoServerRestRoleServicePanel.title=AuthKEY REST Role Service
# GeoServerRestRoleServicePanel.description=Role service from REST endpoint

# GeoServerRestRoleServicePanel.restRoleSettings=REST Role Service Settings
# GeoServerRestRoleServicePanel.baseUrl=Base Server URL
# GeoServerRestRoleServicePanel.rolesRESTEndpoint=Roles REST Endpoint
# GeoServerRestRoleServicePanel.adminRoleRESTEndpoint=Admin Role REST Endpoint
# GeoServerRestRoleServicePanel.usersRESTEndpoint=Users REST Endpoint
# GeoServerRestRoleServicePanel.rolesJSONPath=Roles JSON Path
# GeoServerRestRoleServicePanel.adminRoleJSONPath=Admin Role JSON Path
# GeoServerRestRoleServicePanel.usersJSONPath=Users JSON Path
# GeoServerRestRoleServicePanel.cacheConcurrencyLevel=REST Rules Cache Concurrency Level
# GeoServerRestRoleServicePanel.cacheMaximumSize=REST Rules Cache Maximum Size (# keys)
# GeoServerRestRoleServicePanel.cacheExpirationTime=REST Rules Cache Expiration Time (ms)
# GeoServerRestRoleServicePanel.authApiKey=REST Api Key (optional)
